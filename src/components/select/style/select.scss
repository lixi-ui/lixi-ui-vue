@use "sass:map";

@import '@lixi/style/src/mixins/mixins';
@import '@lixi/style/src/mixins/utils';
@import '@lixi/style/src/mixins/var';
@import '@lixi/style/src/common/var';
// @import './select-dropdown.scss';

@include b(select) {
  @include set-component-css-var('select', $--select);
}

@include b(select) {
  display: inline-block;
  position: relative;
  line-height: map.get($--input-height, 'default');

  @include e(popper) {
    @include picker-popper(
      map.get($--select-dropdown, 'background'),
      map.get($--select-dropdown, 'border'),
      map.get($--select-dropdown, 'shadow')
    );
  }

  @each $size in (medium, small, mini) {
    @include m($size) {
      line-height: map.get($--input-height, $size);
    }
  }

  .#{$namespace}-select__tags > span {
    display: inline-block;
  }

  &:hover {
    .#{$namespace}-input__inner {
      border-color: var(--lx-select-border-color-hover);
    }
  }

  .#{$namespace}-select__tags-text {
    text-overflow: ellipsis;
    display: inline-block;
    overflow-x: hidden;
    vertical-align: bottom;
  }

  .#{$namespace}-input__inner {
    cursor: pointer;
    padding-right: 35px;
    display: block;

    &:focus {
      border-color: var(--lx-select-input-focus-border-color);
    }
  }

  .#{$namespace}-input {
    display: block;

    & .#{$namespace}-select__caret {
      color: var(--lx-select-input-color);
      font-size: var(--lx-select-input-font-size);
      transition: transform var(--lx-transition-duration);
      transform: rotateZ(180deg);
      cursor: pointer;

      @include when(reverse) {
        transform: rotateZ(0deg);
      }

      @include when(show-close) {
        font-size: var(--lx-select-font-size);
        text-align: center;
        transform: rotateZ(180deg);
        border-radius: var(--lx-border-radius-circle);
        color: var(--lx-select-input-color);
        transition: var(--lx-transition-color);

        &:hover {
          color: var(--lx-select-close-hover-color);
        }
      }
    }

    &.is-disabled {
      & .#{$namespace}-input__inner {
        cursor: not-allowed;

        &:hover {
          border-color: var(--lx-select-disabled-border);
        }
      }
    }

    &.is-focus .#{$namespace}-input__inner {
      border-color: var(--lx-select-input-focus-border-color);
    }
  }

  @include e(input) {
    border: none;
    outline: none;
    padding: 0;
    margin-left: 15px;
    color: var(--lx-select-multiple-input-color);
    font-size: var(--lx-select-font-size);
    appearance: none;
    height: 28px;
    background-color: transparent;
    @include when(mini) {
      height: 14px;
    }
  }

  @include e(close) {
    cursor: pointer;
    position: absolute;
    top: 8px;
    z-index: var(--lx-index-top);
    right: 25px;
    color: var(--lx-select-input-color);
    line-height: 18px;
    font-size: var(--lx-select-input-font-size);

    &:hover {
      color: var(--lx-select-close-hover-color);
    }
  }

  @include e(tags) {
    position: absolute;
    line-height: normal;
    white-space: normal;
    z-index: var(--lx-index-normal);
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    align-items: center;
    flex-wrap: wrap;
  }

  .#{$namespace}-tag__close {
    margin-top: -2px;
  }

  .#{$namespace}-select__tags .#{$namespace}-tag {
    box-sizing: border-box;
    border-color: transparent;
    margin: 2px 0 2px 6px;
    background-color: #f0f2f5;

    .#{$namespace}-icon-close {
      background-color: var(--lx-text-color-placeholder);
      right: -7px;
      top: 0;
      color: $--color-white;

      &:hover {
        background-color: var(--lx-text-color-secondary);
      }

      &::before {
        display: block;
        transform: translate(0, 0.5px);
      }
    }
  }
}
